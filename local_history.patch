Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	
+++ b/app/src/main/res/layout/activity_main.xml	(date 1728808270723)
@@ -8,130 +8,20 @@
     android:orientation="vertical"
     tools:context=".presentation.MainActivity">
 
-   <com.google.android.material.imageview.ShapeableImageView
-       android:id="@+id/imageView"
-       android:layout_width="150dp"
-       android:layout_height="150dp"
-       android:layout_gravity="center"/>
-
-
-    <TextView
-        android:id="@+id/nameTV"
-        android:layout_margin="10dp"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"/>
-
-    <TextView
-        android:id="@+id/emailTV"
-        android:layout_margin="10dp"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"/>
-
-    <com.google.android.gms.common.SignInButton
-        android:id="@+id/SignIn"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        />
-
-    <com.google.android.material.button.MaterialButton
-        android:id="@+id/SignOut"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        android:text="sign out"/>
-
-
-
-
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:padding="16dp">
-
-        <EditText
-            android:id="@+id/search_name"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:hint="Введите имя персонажа"
-            android:inputType="textPersonName"
-            android:padding="8dp"
-            android:textSize="32sp" />
-        <EditText
-            android:id="@+id/search_gender"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:hint="Введите пол"
-            android:inputType="textPersonName"
-            android:padding="8dp"
-            android:textSize="32sp" />
-        <EditText
-            android:id="@+id/search_species"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:hint="Введите расу"
-            android:inputType="textPersonName"
-            android:padding="8dp"
-            android:textSize="32sp" />
-
-        <EditText
-            android:id="@+id/search_origin"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:hint="Введите планету"
-            android:inputType="textPersonName"
-            android:padding="8dp"
-            android:textSize="32sp" />
-
-        <Button
-            android:id="@+id/search_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:text="Поиск"
-            android:padding="8dp"
-            android:textSize="16sp" />
-
-
 
-    </LinearLayout>
-
-    <LinearLayout
+    <FrameLayout
+        android:id="@+id/sign_in_fragment_container"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:padding="16dp">
+        android:layout_height="0dp"
+        android:layout_weight="12"
+        android:fitsSystemWindows="true"/>
 
-        <EditText
-            android:id="@+id/index_episode"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:hint="Введите эпизод"
-            android:inputType="text"
-            android:padding="8dp"
-            android:textSize="32sp" />
-
-        <Button
-            android:id="@+id/search_episode_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:text="Поиск"
-            android:padding="8dp"
-            android:textSize="16sp" />
-
-    </LinearLayout>
-
-
-    <!-- Нижний контейнер для второго фрагмента -->
-    <LinearLayout
-        android:id="@+id/second_fragment_container"
+
+    <FrameLayout
+        android:id="@+id/character_search_fragment_container"
         android:layout_width="match_parent"
         android:layout_height="0dp"
         android:layout_weight="12"
-        android:orientation="vertical"
         android:fitsSystemWindows="true"/>
 
 </LinearLayout>
Index: app/src/main/res/layout/fragment_sign_in.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_sign_in.xml b/app/src/main/res/layout/fragment_sign_in.xml
new file mode 100644
--- /dev/null	(date 1728810923763)
+++ b/app/src/main/res/layout/fragment_sign_in.xml	(date 1728810923763)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context=".presentation.SignInFragment">
+
+    <com.google.android.material.imageview.ShapeableImageView
+        android:id="@+id/imageView"
+        android:layout_width="150dp"
+        android:layout_height="150dp"
+        android:layout_gravity="center" />
+
+    <TextView
+        android:id="@+id/nameTV"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" />
+
+    <TextView
+        android:id="@+id/emailTV"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" />
+
+    <com.google.android.gms.common.SignInButton
+        android:id="@+id/sign_in_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Sign in with Google" />
+
+
+    <com.google.android.material.button.MaterialButton
+        android:id="@+id/SignOut"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="sign out" />
+
+
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_character_search.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_character_search.xml b/app/src/main/res/layout/fragment_character_search.xml
new file mode 100644
--- /dev/null	(date 1728807349458)
+++ b/app/src/main/res/layout/fragment_character_search.xml	(date 1728807349458)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:padding="16dp"
+    tools:context=".presentation.CharacterSearchFragment">
+
+
+    <EditText
+        android:id="@+id/search_name"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:hint="Введите имя персонажа"
+        android:inputType="textPersonName" />
+
+    <EditText
+        android:id="@+id/search_gender"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:hint="Введите пол"
+        android:inputType="textPersonName" />
+
+    <EditText
+        android:id="@+id/search_origin"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:hint="Введите происхождение" />
+
+    <EditText
+        android:id="@+id/search_species"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:hint="Введите вид" />
+
+    <Button
+        android:id="@+id/search_button"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Поиск" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/bal/fourthproject/presentation/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bal/fourthproject/presentation/MainActivity.java b/app/src/main/java/com/bal/fourthproject/presentation/MainActivity.java
--- a/app/src/main/java/com/bal/fourthproject/presentation/MainActivity.java	
+++ b/app/src/main/java/com/bal/fourthproject/presentation/MainActivity.java	(date 1728810703539)
@@ -25,6 +25,7 @@
 
 import com.bal.fourthproject.data.DataFetchService;
 import com.bal.fourthproject.R;
+import com.bal.fourthproject.data.Episode;
 
 import android.view.View;
 import android.widget.Button;
@@ -33,80 +34,26 @@
 import android.widget.Toast;
 
 
-import com.bal.fourthproject.data.Episode;
-import com.bal.fourthproject.data.EpisodeFetchService;
-import com.bumptech.glide.Glide;
-import com.google.android.gms.auth.api.signin.GoogleSignIn;
-import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
-import com.google.android.gms.auth.api.signin.GoogleSignInClient;
-import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
-import com.google.android.gms.common.SignInButton;
-import com.google.android.gms.common.api.ApiException;
-import com.google.android.gms.tasks.OnCompleteListener;
-import com.google.android.gms.tasks.OnSuccessListener;
-import com.google.android.gms.tasks.Task;
-import com.google.android.material.button.MaterialButton;
-import com.google.android.material.imageview.ShapeableImageView;
-import com.google.firebase.auth.AuthCredential;
-import com.google.firebase.auth.AuthResult;
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.auth.GoogleAuthProvider;
 
-import java.util.Objects;
 
 public class MainActivity extends AppCompatActivity {
 
     private static final String TAG = "MainActivity";
     private FavouriteCharactersFragment favouriteCharactersFragment = new FavouriteCharactersFragment();
+    private SignInFragment signInFragment = new SignInFragment();
+    private CharacterSearchFragment characterSearchFragment = new CharacterSearchFragment();
     private AllCharactersFragment allCharactersFragment = new AllCharactersFragment();
-    private EditText indexEpisode;
-    private EditText search_gender, search_origin, search_species, search_name;
-    private Button searchButton, searchEpisodeButton, filterCharacters;
-    private ShapeableImageView imageView;
 
-    FirebaseAuth auth;
-    
-    TextView name, mail;
+
 
 
-    private final ActivityResultLauncher<Intent> activityResultLauncher=
-            registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), new ActivityResultCallback<ActivityResult>() {
-                @Override
-                public void onActivityResult(ActivityResult result) {
-                    if (result.getResultCode() == RESULT_OK){
-                        Task<GoogleSignInAccount> accountTask = GoogleSignIn.getSignedInAccountFromIntent(result.getData());
-                        try {
-                            GoogleSignInAccount signInAccount = accountTask.getResult(ApiException.class);
 
-                            AuthCredential authCredential = GoogleAuthProvider.getCredential(signInAccount.getIdToken(), null);
 
-                            auth.signInWithCredential(authCredential).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
-                                @Override
-                                public void onComplete(@NonNull Task<AuthResult> task) {
-                                    if(task.isSuccessful()){
-                                        auth = FirebaseAuth.getInstance();
 
-                                        Glide.with(MainActivity.this).load(Objects.requireNonNull(auth.getCurrentUser()).getPhotoUrl()).into(imageView);
-                                        name.setText(auth.getCurrentUser().getDisplayName());
-                                        mail.setText(auth.getCurrentUser().getEmail());
 
-                                        makeText(MainActivity.this, "Signed in successfully!", Toast.LENGTH_LONG).show();
-                                    }
-                                    else{
-                                        makeText(MainActivity.this, "Signed in failed!", Toast.LENGTH_LONG).show();
-                                    }
-                                }
-                            });
 
-                        } catch (ApiException e) {
-                            e.printStackTrace();
-                        }
-                    }
-                }
-            });
 
 
-
     private BroadcastReceiver episodeReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
@@ -129,67 +76,22 @@
             return insets;
         });
 
-        imageView = findViewById(R.id.imageView);
-        name = findViewById(R.id.nameTV);
-        mail = findViewById(R.id.emailTV);
-
-
-
-
 
         if (savedInstanceState == null) {
-            addFragment(allCharactersFragment, R.id.second_fragment_container);
+            getSupportFragmentManager().beginTransaction()
+                    .replace(R.id.sign_in_fragment_container, allCharactersFragment)
+                    .replace(R.id.character_search_fragment_container, signInFragment)
+                    .commit();
         }
-
-
-
-
-        GoogleSignInOptions options = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
-                .requestIdToken(getString(R.string.client_id))
-                .requestEmail()
-                .build();
-
-
-        GoogleSignInClient googleSignInClient = GoogleSignIn.getClient(MainActivity.this, options);
-        auth = FirebaseAuth.getInstance();
-
-        SignInButton signInButton = findViewById(R.id.SignIn);
-        signInButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent intent = googleSignInClient.getSignInIntent();
-                activityResultLauncher.launch(intent);
-            }
-        });
+        /*
+        if (savedInstanceState == null) {
+            addFragment(allCharactersFragment, R.id.sign_in_fragment_container);
+        }
 
-        MaterialButton signOut = findViewById(R.id.SignOut);
-        signOut.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                FirebaseAuth.getInstance().addAuthStateListener(new FirebaseAuth.AuthStateListener() {
-                    @Override
-                    public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {
-                        if (firebaseAuth.getCurrentUser() == null) {
-                            googleSignInClient.signOut().addOnSuccessListener(new OnSuccessListener<Void>() {
-                                @Override
-                                public void onSuccess(Void unused) {
-                                    makeText(MainActivity.this, "Signed out successfully", Toast.LENGTH_LONG).show();
-                                    startActivity(new Intent(MainActivity.this, MainActivity.class));
-                                }
-                            });
-                        }
-                    }
-                });
+         */
 
-                FirebaseAuth.getInstance().signOut();
-            }
-        });
 
-        if (auth.getCurrentUser() != null) {
-            Glide.with(MainActivity.this).load(Objects.requireNonNull(auth.getCurrentUser().getDisplayName())).into(imageView);
-            name.setText(auth.getCurrentUser().getDisplayName());
-            mail.setText(auth.getCurrentUser().getEmail());
-        }
+        services();
 
 
 
@@ -197,73 +99,10 @@
 
     private void services(){
 
-        search_name = findViewById(R.id.search_name);
-        search_gender = findViewById(R.id.search_gender);
-        search_origin = findViewById(R.id.search_origin);
-        search_species = findViewById(R.id.search_species);
-        indexEpisode = findViewById(R.id.index_episode);
-        searchEpisodeButton = findViewById(R.id.search_episode_button);
-        searchButton = findViewById(R.id.search_button);
-
-
-        searchEpisodeButton.setOnClickListener(v -> {
-            String idString = indexEpisode.getText().toString();
-            int id = Integer.parseInt(idString);
-
-
-            Intent secondIntent = new Intent(this, EpisodeFetchService.class);
-            secondIntent.putExtra("episode_id", id);
-            startService(secondIntent);
-        });
-
-
-        searchButton.setOnClickListener(v -> {
-
-            String name = search_name.getText().toString();
-            String gender = search_gender.getText().toString();
-            String species = search_species.getText().toString();
-            String origin = search_origin.getText().toString();
-            performSearch(name, gender, origin, species);
-        });
-
-
-        search_name = findViewById(R.id.search_name);
-        search_gender = findViewById(R.id.search_gender);
-        search_origin = findViewById(R.id.search_origin);
-        search_species = findViewById(R.id.search_species);
-        indexEpisode = findViewById(R.id.index_episode);
-        searchEpisodeButton = findViewById(R.id.search_episode_button);
-        searchButton = findViewById(R.id.search_button);
-
         LocalBroadcastManager.getInstance(this).registerReceiver(episodeReceiver, new IntentFilter("com.bal.fourthproject.EPISODE_UPDATED"));
-
-
         Intent intent = new Intent(this, DataFetchService.class);
         startService(intent);
 
-
-        searchEpisodeButton.setOnClickListener(v -> {
-            String idString = indexEpisode.getText().toString();
-            int id = Integer.parseInt(idString);
-
-
-            Intent secondIntent = new Intent(this, EpisodeFetchService.class);
-            secondIntent.putExtra("episode_id", id);
-            startService(secondIntent);
-        });
-
-
-        searchButton.setOnClickListener(v -> {
-
-            String name = search_name.getText().toString();
-            String gender = search_gender.getText().toString();
-            String species = search_species.getText().toString();
-            String origin = search_origin.getText().toString();
-            performSearch(name, gender, origin, species);
-        });
-
-
-
     }
 
 
@@ -276,27 +115,7 @@
         }
     }
 
-    private void performSearch(String name, String gender, String origin, String species) {
-        try {
-            if (!TextUtils.isEmpty(name) || !TextUtils.isEmpty(gender) || !TextUtils.isEmpty(origin) || !TextUtils.isEmpty(species)) {
-                Context context = getApplicationContext();
-                Intent intent = new Intent(context, DataFetchService.class);
-                if(!TextUtils.isEmpty(name))
-                    intent.putExtra("name", name);
-                if(!TextUtils.isEmpty(gender))
-                    intent.putExtra("gender", gender);
-                if(!TextUtils.isEmpty(origin))
-                    intent.putExtra("origin", origin);
-                if(!TextUtils.isEmpty(species))
-                    intent.putExtra("species", species);
-                context.startService(intent);
-            } else {
-                Log.e(TAG, "Search name is empty");
-            }
-        } catch (Exception e) {
-            Log.e(TAG, "Error during search", e);
-        }
-    }
+
 
     @Override
     protected void onDestroy() {
Index: app/src/main/java/com/bal/fourthproject/presentation/SignInFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bal/fourthproject/presentation/SignInFragment.java b/app/src/main/java/com/bal/fourthproject/presentation/SignInFragment.java
new file mode 100644
--- /dev/null	(date 1728810987109)
+++ b/app/src/main/java/com/bal/fourthproject/presentation/SignInFragment.java	(date 1728810987109)
@@ -0,0 +1,132 @@
+package com.bal.fourthproject.presentation;
+
+import static android.widget.Toast.makeText;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+
+import androidx.activity.result.ActivityResultLauncher;
+import androidx.activity.result.contract.ActivityResultContracts;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.fragment.app.Fragment;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.bal.fourthproject.R;
+import com.bumptech.glide.Glide;
+import com.google.android.gms.auth.api.signin.GoogleSignIn;
+import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
+import com.google.android.gms.auth.api.signin.GoogleSignInClient;
+import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
+import com.google.android.gms.common.SignInButton;
+import com.google.android.gms.common.api.ApiException;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.android.material.button.MaterialButton;
+import com.google.android.material.imageview.ShapeableImageView;
+import com.google.firebase.auth.AuthCredential;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.GoogleAuthProvider;
+
+import java.util.Objects;
+public class SignInFragment extends Fragment {
+
+    private ShapeableImageView imageView;
+    private TextView name, mail;
+    private FirebaseAuth auth;
+    private ActivityResultLauncher<Intent> activityResultLauncher;
+
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_sign_in, container, false);
+        return view;
+    }
+
+    @Override
+    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
+
+        super.onViewCreated(view, savedInstanceState);
+        imageView = view.findViewById(R.id.imageView);
+        name = view.findViewById(R.id.nameTV);
+        mail = view.findViewById(R.id.emailTV);
+
+        // Инициализация FirebaseAuth
+        auth = FirebaseAuth.getInstance();
+        setupSignIn(view);
+        setupSignOut(view);
+
+        if (auth.getCurrentUser() != null) {
+            Glide.with(this).load(Objects.requireNonNull(auth.getCurrentUser().getPhotoUrl())).into(imageView);
+            name.setText(auth.getCurrentUser().getDisplayName());
+            mail.setText(auth.getCurrentUser().getEmail());
+        }
+
+        // Регистрация ActivityResultLauncher для обработки результата авторизации
+        activityResultLauncher = registerForActivityResult(
+                new ActivityResultContracts.StartActivityForResult(),
+                result -> {
+                    if (result.getResultCode() == AppCompatActivity.RESULT_OK) {
+                        Task<GoogleSignInAccount> accountTask = GoogleSignIn.getSignedInAccountFromIntent(result.getData());
+                        handleSignInResult(accountTask);
+                    }
+                }
+        );
+    }
+
+    private void setupSignIn(View view) {
+        GoogleSignInOptions options = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
+                .requestIdToken(getString(R.string.client_id))
+                .requestEmail()
+                .build();
+
+        GoogleSignInClient googleSignInClient = GoogleSignIn.getClient(requireActivity(), options);
+
+        SignInButton signInButton = view.findViewById(R.id.sign_in_button);
+        signInButton.setOnClickListener(v -> {
+            Intent intent = googleSignInClient.getSignInIntent();
+            activityResultLauncher.launch(intent);
+        });
+    }
+
+    private void handleSignInResult(Task<GoogleSignInAccount> accountTask) {
+        try {
+            GoogleSignInAccount signInAccount = accountTask.getResult(ApiException.class);
+            AuthCredential authCredential = GoogleAuthProvider.getCredential(signInAccount.getIdToken(), null);
+            auth.signInWithCredential(authCredential).addOnCompleteListener(task -> {
+                if (task.isSuccessful()) {
+                    Glide.with(this).load(auth.getCurrentUser().getPhotoUrl()).into(imageView);
+                    name.setText(auth.getCurrentUser().getDisplayName());
+                    mail.setText(auth.getCurrentUser().getEmail());
+                    Toast.makeText(getContext(), "Signed in successfully!", Toast.LENGTH_LONG).show();
+                } else {
+                    Toast.makeText(getContext(), "Sign in failed!", Toast.LENGTH_LONG).show();
+                }
+            });
+        } catch (ApiException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private void setupSignOut(View view) {
+        GoogleSignInClient googleSignInClient = GoogleSignIn.getClient(requireActivity(), new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN).build());
+        MaterialButton signOutButton = view.findViewById(R.id.SignOut);
+        signOutButton.setOnClickListener(v -> {
+            FirebaseAuth.getInstance().signOut();
+            googleSignInClient.signOut().addOnSuccessListener(unused -> {
+                Toast.makeText(getContext(), "Signed out successfully", Toast.LENGTH_LONG).show();
+                // Обновление UI после выхода
+            });
+        });
+    }
+}
+
+
Index: app/src/main/java/com/bal/fourthproject/presentation/CharacterSearchFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/bal/fourthproject/presentation/CharacterSearchFragment.java b/app/src/main/java/com/bal/fourthproject/presentation/CharacterSearchFragment.java
new file mode 100644
--- /dev/null	(date 1728806934877)
+++ b/app/src/main/java/com/bal/fourthproject/presentation/CharacterSearchFragment.java	(date 1728806934877)
@@ -0,0 +1,64 @@
+package com.bal.fourthproject.presentation;
+
+import android.content.Intent;
+import android.os.Bundle;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+
+import android.text.TextUtils;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import com.bal.fourthproject.R;
+import com.bal.fourthproject.data.DataFetchService;
+import com.google.firebase.auth.FirebaseAuth;
+
+public class CharacterSearchFragment extends Fragment {
+
+    private EditText searchName, searchGender, searchOrigin, searchSpecies;
+    private Button searchButton;
+    private FirebaseAuth auth;
+
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_character_search, container, false);
+        return view;
+    }
+
+    @Override
+    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        searchName = view.findViewById(R.id.search_name);
+        searchGender = view.findViewById(R.id.search_gender);
+        searchOrigin = view.findViewById(R.id.search_origin);
+        searchSpecies = view.findViewById(R.id.search_species);
+        searchButton = view.findViewById(R.id.search_button);
+
+        searchButton.setOnClickListener(v -> performSearch());
+    }
+
+    private void performSearch() {
+        String name = searchName.getText().toString();
+        String gender = searchGender.getText().toString();
+        String origin = searchOrigin.getText().toString();
+        String species = searchSpecies.getText().toString();
+
+        if (!TextUtils.isEmpty(name) || !TextUtils.isEmpty(gender) || !TextUtils.isEmpty(origin) || !TextUtils.isEmpty(species)) {
+            Intent intent = new Intent(getContext(), DataFetchService.class);
+            if (!TextUtils.isEmpty(name)) intent.putExtra("name", name);
+            if (!TextUtils.isEmpty(gender)) intent.putExtra("gender", gender);
+            if (!TextUtils.isEmpty(origin)) intent.putExtra("origin", origin);
+            if (!TextUtils.isEmpty(species)) intent.putExtra("species", species);
+            getContext().startService(intent);
+        } else {
+            Toast.makeText(getContext(), "Поля поиска не должны быть пустыми", Toast.LENGTH_SHORT).show();
+        }
+    }
+}
